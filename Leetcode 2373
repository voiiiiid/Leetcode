class Solution {
    int[][] result;
    int resultN;
    int resultRow;
    int resultCol;
    int pos;
    public int[][] largestLocal(int[][] grid) {
        int N = grid.length;
        result = new int[N-2][N-2];
        resultN = result.length;
        for(int i = 0; i < N-2; i++){
            if((N-i) >= 3){
                for(int j = 0; j < N-2; j++){
                    if((N-j) >= 3){
                        solve(grid, i, j);
                    }
                    else break;
                }
            }
            else break;
        }
        return result;
    }
    
    public void solve(int[][] grid, int row, int col){
        int max_element = 0;
        for(int i = row; i < 3+row; i++){
            for(int j = col; j < 3+col; j++){
                max_element = Math.max(grid[i][j], max_element);
            }
        }
        result[resultRow][resultCol] = max_element;
        pos += 1;
        if(pos >= resultN) {
         resultRow += 1;
         resultCol = 0;
         pos = 0;
        }
        else{
            resultCol += 1;
        }
    }
}
