class Solution {
    int[] dp;
    public int tribonacci(int n) {
        if(n <= 0) return 0;
        if(n == 1) return 1;
        if(n == 2) return 1;
        dp = new int[n+1];
        for(int i = 0; i < n+1; i++){
            dp[i] = -1;
        }
        dp[0] = 0;
        dp[1] = 1;
        dp[2] = 1;
        return solve(n, dp);
    }
    public int solve(int n, int[] dp){
        if(n <= 0) return 0;
        if(n == 1) return 1;
        if(n == 2) return 1;
        if(dp[n] != -1) return dp[n];
        return dp[n] = (solve(n-1, dp) + solve(n-2, dp) + solve(n-3, dp));
    }
}
