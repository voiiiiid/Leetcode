class Solution {
    int m;
    int n;
    int count;
    public int islandPerimeter(int[][] grid) {
        m = grid.length;
        n = grid[0].length;
        count = 0;
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(grid[i][j] == 1){
                    solve(grid, i, j);
                    return count;
                }
            }
        }
        return -1;
    }
    
    public void solve(int[][] grid, int i, int j){
        if(i < 0 || i >= m || j < 0 || j >= n || grid[i][j] == 0){
            count += 1;
            return;
        }
        
        if(grid[i][j] == -1){
            return;
        }
        
        grid[i][j] = -1; //mark visited
        
        solve(grid, i+1, j);
        solve(grid, i-1, j);
        solve(grid, i, j+1);
        solve(grid, i, j-1);
        
        return;
    }
}
