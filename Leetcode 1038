# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def bstToGst(self, root: TreeNode) -> TreeNode:
        
        if root is None:
            return
        
        def iTraversal(root, inorder):
            if root is None:
                return
            
            iTraversal(root.left, inorder)
            inorder.append(root.val)
            iTraversal(root.right, inorder)
        
        def changeNumber(root, inorder):
            
            if root is None:
                return
            
            changeNumber(root.left, inorder)
            changeNumber(root.right, inorder)
            idx = inorder.index(root.val)
            for i in range(idx+1, len(inorder)):
                root.val += inorder[i]
            
        inorder = []
        iTraversal(root, inorder)
        changeNumber(root, inorder)
        return root
        
