class Solution {
    public int trap(int[] height) {
        int N = height.length;
        int arrayforleft[] = new int[N];        
        int arrayforright[] = new int[N];
        
        int currmaxleft = height[0];
        for(int i = 0; i < N; i++){
            arrayforleft[i] = Math.max(currmaxleft, height[i]);
            currmaxleft = arrayforleft[i];
        }
        
        int currmaxright = height[N-1];
        for(int i = N-1; i >= 0; i--){
            arrayforright[i] = Math.max(currmaxright, height[i]);
            currmaxright = arrayforright[i];
        }
        
        int water = 0;
        for(int i = 0; i < N; i++){
            water += Math.min(arrayforleft[i], arrayforright[i]) - height[i];
        }
        return water;
    }
}
