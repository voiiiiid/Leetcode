def bellman_ford(V, edges, S):
    result = [float('inf')] * V
    result[S] = 0

    # Relaxation phase
    for _ in range(V - 1):
        for u, v, w in edges:
            if result[u] != float('inf') and result[u] + w < result[v]:
                result[v] = result[u] + w

    # Check for negative cycles
    for u, v, w in edges:
        if result[u] != float('inf') and result[u] + w < result[v]:
            return [-1]  # Negative cycle detected

    return result
